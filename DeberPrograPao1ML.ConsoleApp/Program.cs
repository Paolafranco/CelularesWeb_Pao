// This file was auto-generated by ML.NET Model Builder. 

using System;
using DeberPrograPao1ML.Model;

namespace DeberPrograPao1ML.ConsoleApp
{
    class Program
    {
        static void Main(string[] args)
        {
           
        // Create single instance of sample data from first line of dataset for model input
        ModelInput sampleData = new ModelInput()
            {
                EmailConfirmed = true,
                PasswordHash = @"AQAAAAEAACcQAAAAENi7SQA5MkRnoCxaMSiqwuvk8YO9XKlTNnlH/iVv3dWnrcd9K791qXxXJrxMys6ubA==",
                SecurityStamp = @"AVOZH37MOAYQLSNTSN35PD5EGIY4B22N",
                ConcurrencyStamp = @"e30e8561-398c-46df-acc3-f3c2dae326de",
                PhoneNumberConfirmed = false,
                LockoutEnd = 0F,
                LockoutEnabled = true,
                AccessFailedCount = 0F,
            };

            // Make a single prediction on the sample data and print results
            var predictionResult = ConsumeModel.Predict(sampleData);

            Console.WriteLine("Using model to make single prediction -- Comparing actual Id with predicted Id from sample data...\n\n");
            Console.WriteLine($"EmailConfirmed: {sampleData.EmailConfirmed}");
            Console.WriteLine($"PasswordHash: {sampleData.PasswordHash}");
            Console.WriteLine($"SecurityStamp: {sampleData.SecurityStamp}");
            Console.WriteLine($"ConcurrencyStamp: {sampleData.ConcurrencyStamp}");
            Console.WriteLine($"PhoneNumberConfirmed: {sampleData.PhoneNumberConfirmed}");
            Console.WriteLine($"LockoutEnd: {sampleData.LockoutEnd}");
            Console.WriteLine($"LockoutEnabled: {sampleData.LockoutEnabled}");
            Console.WriteLine($"AccessFailedCount: {sampleData.AccessFailedCount}");
            Console.WriteLine($"\n\nPredicted Id value {predictionResult.Prediction} \nPredicted Id scores: [{String.Join(",", predictionResult.Score)}]\n\n");
            Console.WriteLine("=============== End of process, hit any key to finish ===============");
            Console.ReadKey();
        }
    }
}
